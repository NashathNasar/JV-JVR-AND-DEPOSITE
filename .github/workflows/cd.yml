
name:  Wpf Continuous Delivery


on:
  push:
    tags:
      - '*'

jobs:

  build:


    runs-on: windows-latest

    env:
    
      Solution_Path: WpfApp1.sln

      Wpf_Project_Path: WpfApp1\WpfApp1.csproj
      Wap_Project_Directory: WpfApp1.Package
      Wap_Project_Name: WpfApp1.Package.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2


    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.0

 

  

    # Archive the package
    - name: Create archive
      run: Compress-Archive -Path $env:Wap_Project_Directory\AppPackages\* -DestinationPath $env:Wap_Project_Directory\AppPackages\AppPackages.zip

    # Create the release:  https://github.com/actions/create-release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref}}.${{matrix.ChannelName}}.${{ matrix.targetplatform }}
        release_name:  ${{ github.ref }}.${{ matrix.ChannelName }}.${{ matrix.targetplatform }}
        draft: false
        prerelease: false

    # Upload release asset:   https://github.com/actions/upload-release-asset
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: MyWpfApp.Package\AppPackages\AppPackages.zip  # Use the full path here because environment variables are not in scope
        asset_name: AppPackages.zip
        asset_content_type: application/zip
